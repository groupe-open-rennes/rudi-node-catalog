; Each profile their own section

; ### Route names ###
;
;    pub_get_all_metadata   -> GET /api/v1/resources
;    pub_get_one_metadata   -> GET /api/v1/resources/:id
;    pub_upsert_one_report  -> PUT /api/v1/resources/:id/report
;    pub_get_all_obj_report -> GET /api/v1/resources/:id/report
;    pub_get_one_obj_report -> GET /api/v1/resources/:id/report/:irid
;    
;    prv_add_one              -> POST /api/admin/:object
;    prv_upsert_one           -> PUT /api/admin/:object
;    prv_get_all              -> GET /api/admin/:object
;    prv_get_one              -> GET /api/admin/:object/:id
;    prv_del_one              -> DELETE /api/admin/:object/:id
;    prv_del_many             -> DELETE /api/admin/:object
;    prv_del_list             -> POST /api/admin/:object/deletion
;    prv_get_orphans          -> GET /api/admin/:object/unlinked
;    prv_add_obj_report       -> POST /api/admin/:object/:id/report
;    prv_upsert_obj_report    -> PUT /api/admin/:object/:id/report
;    prv_get_obj_report_list  -> GET /api/admin/:object/:id/report
;    prv_get_one_obj_report   -> GET /api/admin/:object/:id/report/:irid
;    prv_get_all_obj_report   -> GET /api/admin/:object/report
;    prv_del_obj_report       -> DELETE /api/admin/:object/:id/report/:irid
;    prv_del_all_obj_report   -> DELETE /api/admin/:object/:id/report
;    prv_del_list_obj_report  -> POST /api/admin/:object/:id/report/deletion
;    
;    dev_get_every_thesaurus      -> GET /api/admin/enum
;    dev_get_single_thesaurus     -> GET /api/admin/enum/:code
;    dev_get_all_licences         -> GET /api/admin/licences
;    dev_get_all_licence_codes    -> GET /api/admin/licence_codes
;    dev_generate_uuid            -> GET /api/admin/id_generation
;    dev_check_stored_token       -> GET /api/admin/portal/token/check
;    dev_get_portal_metadata      -> GET /api/admin/portal/resources/:id
;    dev_send_metadata_to_portal  -> POST /api/admin/portal/resources/:id
;    dev_del_portal_metadata      -> DELETE /api/admin/portal/resources/:id
;    dev_get_git_hash             -> GET /api/admin/hash
;    dev_get_app_hash             -> GET /api/admin/apphash
;    dev_get_node_version         -> GET /api/admin/nv
;    dev_get_logs                 -> GET /api/admin/logs
;    dev_get_last_log_lines       -> GET /api/admin/logs/:lines
;    dev_get_collections          -> GET /api/admin/db


;--------------------------------------------------------------------------
; RUDI producer node - manager module
;--------------------------------------------------------------------------
[rudi_prod_manager]
pub_key=./0-ssh/rudi_prod_manager.pub

routes[]="prv_add_one"
routes[]="prv_upsert_one"
routes[]="prv_get_all"
routes[]="prv_get_one"
routes[]="prv_del_one"
routes[]="prv_get_orphans"
routes[]="prv_get_obj_report_list"
routes[]="prv_get_one_obj_report"
routes[]="prv_get_all_obj_report"

routes[]="dev_get_every_thesaurus"
routes[]="dev_get_single_thesaurus"
routes[]="dev_get_all_licences"
routes[]="dev_get_all_licence_codes"
routes[]="dev_generate_uuid"
routes[]="dev_get_logs"

;--------------------------------------------------------------------------
; RUDI producer node - API client module
;--------------------------------------------------------------------------
[rudi_api_client]
pub_key=./0-ssh/rudi_api_client.pub

routes[]="prv_add_one"
routes[]="prv_upsert_one"
routes[]="prv_get_all"
routes[]="prv_get_one"
routes[]="prv_del_one"
routes[]="prv_del_many"
routes[]="prv_del_list"
routes[]="prv_get_orphans"
routes[]="prv_add_obj_report"
routes[]="prv_upsert_obj_report"
routes[]="prv_get_obj_report_list"
routes[]="prv_get_one_obj_report"
routes[]="prv_get_all_obj_report"
routes[]="prv_del_obj_report"
routes[]="prv_del_all_obj_report"
routes[]="prv_del_list_obj_report"

routes[]="dev_get_every_thesaurus"
routes[]="dev_get_single_thesaurus"
routes[]="dev_get_all_licences"
routes[]="dev_get_all_licence_codes"
routes[]="dev_exposed_get_portal_token"
routes[]="dev_check_stored_token"
routes[]="dev_get_portal_metadata"
routes[]="dev_send_metadata_to_portal"
routes[]="dev_del_portal_metadata"
routes[]="dev_get_git_hash"
routes[]="dev_get_app_hash"
routes[]="dev_get_node_version"
routes[]="dev_get_logs"
routes[]="dev_get_last_log_lines"
routes[]="dev_get_collections"
routes[]="dev_drop_db"

;--------------------------------------------------------------------------
; RUDI producer node - Postman test client
;--------------------------------------------------------------------------
[rudi_api_pm]
pub_key=./0-ssh/rudi_api_pm.pub
routes[]="all"
